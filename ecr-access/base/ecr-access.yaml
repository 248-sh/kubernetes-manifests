apiVersion: batch/v1
kind: CronJob
metadata:
  name: ecr-access
spec:
  schedule: "0 */10 * * *"
  successfulJobsHistoryLimit: 3
  suspend: false
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: ecr-access
          containers:
            - name: ecr-access
              image: odaniait/aws-kubectl:latest
              imagePullPolicy: IfNotPresent
              envFrom:
                - secretRef:
                    name: aws-access
              env:
                - name: SECRET_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              command:
                - /bin/sh
                - -c
                - |-
                  ECR_TOKEN=`aws ecr get-login-password --region ${AWS_REGION}`
                  kubectl delete secret --ignore-not-found ecr-access -n ${SECRET_NAMESPACE}
                  kubectl create secret docker-registry ecr-access \
                  --docker-server=https://${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com \
                  --docker-username=AWS \
                  --docker-password="${ECR_TOKEN}" \
                  --namespace=${SECRET_NAMESPACE}
                  echo "Secret was successfully updated at $(date)"
          restartPolicy: Never
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ecr-access
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ecr-access
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["ecr-access"]
    verbs: ["delete"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ecr-access
subjects:
  - kind: ServiceAccount
    name: ecr-access
    apiGroup: ""
roleRef:
  kind: Role
  name: ecr-access
  apiGroup: ""
